name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: ccg-linux-x64
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: ccg-linux-x64-musl
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            name: ccg-windows-x64.exe
          - target: x86_64-apple-darwin
            os: macos-latest
            name: ccg-macos-x64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: ccg-macos-arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64

      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary (Unix)
        if: matrix.target != 'x86_64-pc-windows-gnu'
        run: |
          cp target/${{ matrix.target }}/release/ccg ${{ matrix.name }}
          chmod +x ${{ matrix.name }}

      - name: Prepare binary (Windows)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          cp target/${{ matrix.target }}/release/ccg.exe ${{ matrix.name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: artifacts/*/*
